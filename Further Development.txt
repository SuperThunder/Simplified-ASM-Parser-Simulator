Test cases:
Jump to valid label, ex JMP [Code]
	need to have index of label line numbers
	or replace labels with numbers
	preparse file to find all labels, then replace labels with line numbers
	or create some kind of sentinel for each [] and fill them at the end	
Address recorded for opcode lines is one too big
Jump to invalid label

An opcode has an invalid value attached to it: ex SD1 or SDR1
Same label appears twice


More code than space for code (code overflows label)



If program was to be rewritten (because parser2 is a mess):
	Parse all the file lines into a special struct array type
	Array would have a type variable, that could specify pretty much everything -> could be an enum
	Comment line would have value, label line would have value
	Every permutation of what's generically in a line could have a value
	Or, more simply, it would just be a few values of COMMENT, WHITESPACE, LABEL, or OPCODE
	The generic linestruct would have a type int/enum, a file line number, an asm line number, a char array for the whole line, 3 char arrays for each operand, 3 ints for operands, and a pointer to the next line's linestruct

